#!/usr/bin/env node

/**
 * Script para probar espec√≠ficamente la integraci√≥n de Helicone
 */

// Simular variables de entorno
process.env.HELICONE_API_KEY = 'pk-helicone-holfjgi-dgkenja-xcm2ogi-wrwrysi';
process.env.HELICONE_ENABLED = 'true';
process.env.HELICONE_PROPERTY_TAG = 'super-qa-ai';
process.env.PRIMARY_PROVIDER = 'openai';
process.env.OPENAI_API_KEY = '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';

async function testHeliconeIntegration() {
  console.log('üîç Probando integraci√≥n de Helicone...\n');
  
  try {
    // Importar las funciones de Helicone (usando require para TypeScript)
    const { isHeliconeEnabled } = require('./src/lib/ai/heliconeMiddleware.ts');
    const { createModelWithHelicone } = require('./src/lib/ai/heliconeWrapper.ts');
    
    console.log('‚úÖ M√≥dulos de Helicone importados correctamente');
    
    // Verificar configuraci√≥n
    console.log('üìã Configuraci√≥n de Helicone:');
    console.log(`   ‚Ä¢ API Key: ${process.env.HELICONE_API_KEY ? '‚úÖ Configurada' : '‚ùå No configurada'}`);
    console.log(`   ‚Ä¢ Enabled: ${process.env.HELICONE_ENABLED}`);
    console.log(`   ‚Ä¢ Property Tag: ${process.env.HELICONE_PROPERTY_TAG}`);
    console.log(`   ‚Ä¢ Primary Provider: ${process.env.PRIMARY_PROVIDER}`);
    
    // Verificar si Helicone est√° habilitado
    const enabled = isHeliconeEnabled();
    console.log(`\nüîß Helicone habilitado: ${enabled ? '‚úÖ S√≠' : '‚ùå No'}`);
    
    if (!enabled) {
      console.log('‚ùå Helicone no est√° habilitado. Verifica la configuraci√≥n.');
      return;
    }
    
    // Probar creaci√≥n de modelo con Helicone
    console.log('\nüöÄ Probando creaci√≥n de modelo con Helicone...');
    
    const model = createModelWithHelicone('openai', 'gpt-4o-mini');
    console.log('‚úÖ Modelo creado con Helicone');
    
    // Verificar que el modelo tenga las propiedades esperadas
    console.log(`   ‚Ä¢ Tipo de modelo: ${typeof model}`);
    console.log(`   ‚Ä¢ Propiedades del modelo: ${Object.keys(model).slice(0, 5).join(', ')}...`);
    
    console.log('\nüéØ Resultado: La integraci√≥n de Helicone parece estar funcionando correctamente');
    console.log('üìä Para verificar que las requests aparecen en el dashboard:');
    console.log('   1. Visita: https://helicone.ai/dashboard');
    console.log('   2. Haz algunas requests a la API');
    console.log('   3. Verifica que aparezcan en el dashboard');
    
  } catch (error) {
    console.error('‚ùå Error al probar la integraci√≥n de Helicone:');
    console.error(error.message);
    console.error('\nüîß Posibles soluciones:');
    console.error('   1. Verifica que las dependencias est√©n instaladas');
    console.error('   2. Revisa la configuraci√≥n en .env');
    console.error('   3. Aseg√∫rate de que el servidor est√© corriendo');
  }
}

testHeliconeIntegration();
